%% Defining Network Topology

nLinks = 5;
nSigs = 3;

%% State space
xMax = [80, 25, 80, 25, 80];

%% Max flow
c = [30,10,30,10,30];

%% Define demand parameters
beta = zeros(nLinks);
beta(1,3) = .8;
beta(3,5) = .8;
beta(2,3) = 1;
beta(4,5) = 1;

%% Define control parameters
% For each signal
U = cell(nSigs,1);
U{1} = {{1}; {1,2}};
U{2} = {{3}; {3,4}};
U{3} = {{5}};

% Figure out how many total control actions there are
numU = 1;
configPerSig = zeros(nSigs,1);
for i = 1:size(U,1) % iterate over signals
    numU = numU * size(U{i},1);
    configPerSig(i) = size(U{i},1);
end

%% Find downstream and upstream vertices
down_vertex = cell(nLinks,1);
up_vertex = cell(nLinks,1);

for sig = 1:nSigs
    for sigConfig = 1:size(U{sig},1) %iterate over signal configurations
        for link = cell2mat(U{sig}{sigConfig})
            down_vertex{link} = sig;
        end
    end
end

%% Find upstream and downstream links 
down_links = cell(nLinks,1);
up_links = cell(nLinks,1); 

for link = 1:nLinks
    down_links{link} = find(beta(link,:));
    up_links{link} = find(beta(:,link));
end

%% Define supply parameters 
alpha = cell(nLinks,1);

% Define initial supply data structure
for link = 1:nLinks
    if ~isempty(up_links{link})
        alpha{link} = cell();
    end
end



